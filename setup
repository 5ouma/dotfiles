#!/usr/bin/env zsh

trap '[ -e "$dir" ] && rm -r "$dir"' EXIT

#==================================================[ Variables ]==================================================#

declare -r githubURL="https://github.com/5ouma/dotfiles.git"
[ -z "$ZDOTDIR" ] && export -r ZDOTDIR="$HOME/.zsh"
[ -z "$dotfiles" ] && export -r dotfiles="$HOME/.dotfiles"
declare -r packages="$dotfiles/packages"
[ -z "$datas" ] && export -r datas="$dotfiles/datas"

#==================================================[ Functions ]==================================================#

getGum() {
  declare -r ver="0.9.0"
  declare -r url="https://github.com/charmbracelet/gum/releases/download/v$ver/gum_${ver}_$(uname)_$(uname -m).tar.gz"
  declare -gr dir="$HOME/.cache/gum"

  if ! (type gum >/dev/null 2>&1); then
    printf "Wait a moment..."
    mkdir -p "$dir" && curl -sL "$url" | tar -x -C "$dir"
    printf "\r                "
    declare -gr gumCom="$dir/gum"
  else
    # shellcheck disable=SC2155
    declare -gr gumCom="$(which gum)"
  fi
}
getGum

gum() {
  case $1 in
  confirm)
    [[ "$2" =~ "#" ]] && echo
    $gumCom confirm --affirmative "Yes!" --negative "Skip" "${@:2}"
    ;;
  format) $gumCom format "${@:2}" ;;
  input) $gumCom input --header="$2" --placeholder="$3" ;;
  spin) $gumCom spin --spinner=meter --title="$2" "${@:3}" ;;
  done) $gumCom format "‚úÖ Done!" ;;
  esac
}

chsym() {
  typeset -ag packs files
  declare -g num=0
  while read -r pack; do
    declare file="$HOME/${pack#"$packages"/*/}"
    if [[ ! -e "$file" || -n $(diff "$pack" "$file") ]]; then
      packs+=("$pack")
      files+=("$file")
      ((num++))
    fi
  done < <(find "$packages" -type f ! -name ".DS_Store")
}

mksym() {
  declare homeFiles
  for ((i = 1; i <= num; i++)); do
    mkdir -p "$(dirname "${files[i]}")"
    ln -s "${packs[i]}" "${files[i]}"
    homeFiles+=("- ~${files[i]#~}")
  done
  gum format -- "${homeFiles[@]}"
}

#==================================================[ Flags ]==================================================#

case "$1" in
"-h" | "--help")
  gum format <<EOM
## Usage: setup

> üíª The most minimal and powerful dotfiles ever.

## Flags:
-  -h, --help    Print help information
-  -s, --set     Set files to home directory
EOM
  exit
  ;;
"-s" | "--set")
  chsym && mksym
  exit
  ;;
esac

#==================================================[ Preperations ]==================================================#

# Display welcome message
if [[ "$(dirname "$0")" != "$dotfiles" ]]; then
  gum format <<EOM
# Welcome to üíª dotfiles setup!
> https://github.com/5ouma/dotfiles
EOM
fi

# Ask to confirm
$gumCom confirm "Let's start setup!" --affirmative "Yes!" --negative "No" || exit 1

# Clone repository
if [[ ! -e "$dotfiles" ]]; then
  echo && gum spin "Cloning repository into \`~/.dotfiles\`..." -- git clone -q "$githubURL" "$dotfiles"
fi

# Zsh setting
zstyle ":completion:*:commands" rehash 1

#==================================================[ Homebrew ]==================================================#

if ! (type brew >/dev/null 2>&1); then
  gum format "# üç∫ Installing Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  [ "$(uname -m)" = "x86_64" ] && eval "$(/usr/local/bin/brew shellenv)"
  [ "$(uname -m)" = "arm64" ] && eval "$(/opt/homebrew/bin/brew shellenv)"
  brew doctor
  gum done
fi

#==================================================[ Symlink ]==================================================#

mkdir -p "$HOME/.cache" "$HOME/.vim/undo" "$HOME/.ssh/git"
touch "$HOME/.hushlogin"
chsym
if [[ "$num" != 0 ]]; then
  gum format "# üîó Symlinking files..."
  mksym
  gum done
fi

#==================================================[ defaults ]==================================================#

if [[ $(defaults read com.apple.dock springboard-columns) != 9 || $(defaults read com.apple.dock springboard-rows) != 8 ]]; then
  gum format "# üü© Changing Launchpad size..."
  defaults write com.apple.dock springboard-columns -int 9
  defaults write com.apple.dock springboard-rows -int 8
  defaults write com.apple.dock ResetLaunchPad -bool TRUE
  gum done
fi

if [[ ! $(defaults read com.apple.dock persistent-apps) =~ "\"spacer-tile\"" ]]; then
  gum format "# üî≤ Adding spaces on Dock..."
  for ((i = 0; i < 6; i++)); do
    defaults write com.apple.dock persistent-apps -array-add '{tile-type="spacer-tile";}'
  done
  gum done
fi

if [[ "$(defaults read com.apple.screencapture location)" != "$HOME/Pictures/Screen Capture" ]]; then
  gum format "# üì∑ Changing screen capture path..."
  mkdir -p "$HOME/Pictures/Screen Capture"
  defaults write com.apple.screencapture location "$HOME/Pictures/Screen Capture"
  gum done
fi

killall Dock
killall SystemUIServer

if [[ ! $(scutil --get ComputerName) =~ $(id -F)\'s ]]; then
  gum format "# üíª Setting computer name..."
  # shellcheck disable=SC2155
  declare -r computerName=$(gum input "What's your computer name?" "Type your willing computer name")
  # shellcheck disable=SC2155
  declare -r localName=$(echo "$computerName" | sed -e "s/'//g" -e "s/ /-/g")
  scutil --set ComputerName "$computerName"
  scutil --set HostName "$computerName"
  scutil --set LocalHostName "$localName"
  gum format <<EOM
- ComputerName : $(sudo scutil --get ComputerName)
- HostName : $(sudo scutil --get HostName)
- LocalHostName : $(sudo scutil --get LocalHostName)
EOM
  gum done
fi

#==================================================[ Apps ]==================================================#

gum format "# üì≤ Installing apps and commands..."
brew bundle --no-lock --file="$datas/Brewfile"
sleep 1
if [[ ! -e "/Applications/DaVinci Resolve" ]]; then
  gum format "## Please install DaVinci Resolve."
  open "https://www.blackmagicdesign.com/jp/products/davinciresolve"
  gum confirm "Continue when you done." --affirmative "Done" --negative ""
fi
gum done

lporg save -c "$HOME/.cache/launchpad.yaml" >/dev/null 2>&1
if [[ -n $(diff "$datas/launchpad.yaml" "$HOME/.cache/launchpad.yaml") ]]; then
  gum format "# üü© Setting up Launchpad..."
  lporg load -n "$datas/launchpad.yaml" >/dev/null 2>&1
  gum done
fi
command rm "$HOME/.cache/launchpad.yaml"

if [[ -n "$(mackup -n backup)" ]]; then
  gum format "# üìÄ Restoring appliaction settings..."
  mackup restore
  gum done
fi

if ! (defaults read com.apple.universalaccess "com.apple.custommenu.apps" >/dev/null 2>&1); then
  gum format "# ‚å®Ô∏è Restoring App Shortcuts..."
  gum spin "running \`mksei load\`" mksei load "$datas/keyboard_shortcuts.json"
  gum done
fi

eval "$(rtx activate zsh -q)"
if [[ "$(rtx ls)" =~ "missing" ]]; then
  gum format "# üíæ Installing programming languages..."
  rtx install --all
  gum done
fi

gum format "# üìù Installing Vim plugins..."
[ -z "$VIMRC" ] && export -r VIMRC="$HOME/.vim/.vimrc"
[ -z "$VIMINIT" ] && export -r VIMINIT="source $VIMRC"
vim +qall
gum done

#==================================================[ Done! ]==================================================#

gum format "# üéâ Setup up completed!"
