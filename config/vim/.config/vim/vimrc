let t:XDG_CONFIG_HOME = exists($XDG_CONFIG_HOME) ? $XDG_CONFIG_HOME : expand("$HOME/.config")
let t:XDG_CACHE_HOME = exists($XDG_CACHE_HOME) ? $XDG_CACHE_HOME : expand("$HOME/.cache")
let t:XDG_DATA_HOME = exists($XDG_DATA_HOME) ? $XDG_DATA_HOME : expand("$HOME/.local/share")

let &undodir = t:XDG_CACHE_HOME .. '/vim/undo' | call mkdir(&undodir, 'p')
let &viminfofile = t:XDG_CACHE_HOME .. '/vim/info'

"============================================================[ Settings ]============================================================"

set encoding=UTF-8
set nobackup
set noswapfile
set undofile
set autoread
set hidden
set showcmd
set belloff=all
set clipboard+=unnamed
set mouse=a
set updatetime=10
set backspace=indent,eol,start
set shellcmdflag=-ic

" Appearance
set number
set cursorline
set virtualedit=onemore
set smartindent
set nowrap
set showmatch
set laststatus=2
set wildmode=list:longest
syntax enable
set list listchars=tab:→\ ,space:･,eol:↓
set fillchars+=eob:\\x20

" Tab
set expandtab
set shiftwidth=2
set tabstop=2

" Search
set hlsearch
set ignorecase
set incsearch
set smartcase
set wrapscan

"============================================================[ Source ]============================================================"

function! s:get_and_run(file) abort
  let s:path = t:XDG_CONFIG_HOME .. '/vim/' .. a:file
  let s:url= 'https://raw.githubusercontent.com/5ouma/dotfiles/main/config/vim/.config/vim/' .. a:file
  if !filereadable(s:path)
    call system(printf('curl -fsslo %s --create-dirs %s', s:path, s:url))
  endif
  execute 'source' s:path
endfunction

for file in ['plugins.vim', 'keymap.vim']
  call s:get_and_run(file)
endfor
